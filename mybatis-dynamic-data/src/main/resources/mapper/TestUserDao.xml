<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuntian.mybatisdynamic.dao.TestUserDao">

    <resultMap type="com.yuntian.mybatisdynamic.entity.TestUser" id="TestUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="passWord" column="pass_word" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="OTHER"/>
        <result property="sex" column="sex" jdbcType="OTHER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="createId" column="create_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateId" column="update_id" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="OTHER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TestUserMap">
        select
          id, user_id, user_name, pass_word, real_name, nick_name, age, sex, email, create_id, create_time, update_id, update_time, is_delete
        from replicas_db.test_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TestUserMap">
        select
          id, user_id, user_name, pass_word, real_name, nick_name, age, sex, email, create_id, create_time, update_id, update_time, is_delete
        from replicas_db.test_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TestUserMap">
        select
          id, user_id, user_name, pass_word, real_name, nick_name, age, sex, email, create_id, create_time, update_id, update_time, is_delete
        from replicas_db.test_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="passWord != null and passWord != ''">
                and pass_word = #{passWord}
            </if>
            <if test="realName != null and realName != ''">
                and real_name = #{realName}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="createId != null">
                and create_id = #{createId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateId != null">
                and update_id = #{updateId}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into replicas_db.test_user(user_id, user_name, pass_word, real_name, nick_name, age, sex, email, create_id, create_time, update_id, update_time, is_delete)
        values (#{userId}, #{userName}, #{passWord}, #{realName}, #{nickName}, #{age}, #{sex}, #{email}, #{createId}, #{createTime}, #{updateId}, #{updateTime}, #{isDelete})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update replicas_db.test_user
        <set>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="passWord != null and passWord != ''">
                pass_word = #{passWord},
            </if>
            <if test="realName != null and realName != ''">
                real_name = #{realName},
            </if>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="createId != null">
                create_id = #{createId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateId != null">
                update_id = #{updateId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from replicas_db.test_user where id = #{id}
    </delete>

</mapper>